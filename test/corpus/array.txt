==================
Arrays
==================

Array pack_of_cards --> 52;
Array foo table 5;
-----

(source_file
    (array
        (identifier)
        (number)
    )
    (array
        (identifier)
        (number)
    )
)

==================
Array access
==================

[ Main;
    print (string) object.&arr-->0;
];

-----

(source_file
    (routine
        (function_sig
          (identifier))
        (function_block
            (print
                (array_access
                    (cast
                        (identifier)
                        (property_access
                            (identifier)
                            (identifier)
                        )
                    )
                    (number)
                )
            )
)   )   )

==================
Array length
==================

[ Main;
    print (number) object.#arr;
];

-----

(source_file
    (routine
        (function_sig (identifier))
        (function_block
            (print
                (cast
                    (identifier)
                    (property_access
                        (identifier)
                        (array_access
                            (identifier)
                        )
                    )
                )
            )
        )
    )
)

==================
String arrays
==================

Array UUID_ARRAY string "UUID://E9FD3D87-DD2F-4005-B332-23557780B64E//"; #Ifdef UUID_ARRAY; #Endif;

-----
 (source_file
      (array
        (identifier)
        (string_double_quoted))
      (compiler_directive
        (identifier))
      (compiler_directive))


==================
Array definition with initial values
==================

Array task_scores -> 1 1 1 1 1 1;

-----
 (source_file
      (array
        (identifier)
        (number)
        (number)
        (number)
        (number)
        (number)
        (number)))


==================
Array access brackets
==================

[ Main;
    if ((parser_two.&number)->i == 3)
        print "Success!";
];

-----
(source_file
    (routine
        (function_sig
            (identifier)
        )
        (function_block
            (conditional
                (binary_expression
                    (array_access
                        (property_access
                            (identifier)
                            (identifier)
                        )
                        (identifier)
                    )
                    (operator)
                    (number)
                )
                (print
                    (string_double_quoted)
                )
            )
        )
    )
)
